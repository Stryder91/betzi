import { utils } from 'ethers'
import Head from 'next/head'
import { useEffect, useState } from 'react'
import styles from '../styles/Home.module.css'
import { 
  connectToTokenContract, 
  connectToPoolContract, 
  getAccount, 
  getProviderSigned_token, 
  getProviderSigned_pool, 
  CONTRACT_POOL_ADDRESS
} from '../utils/ethers'
import { jsInt } from '../utils/helpers'

export default function Home() {

  const [contract, setContract] = useState();
  const [supply, setSupply] = useState(0);
  const [balance, setBalance] = useState(0);
  const [bet, setBet] = useState({
    currentPool: 0,
    myShare: 0
  });
  const [currentPool, setCurrentPool] = useState(0);

  const [bet1, setBet1] = useState(0);
  const [bet2, setBet2] = useState(0);

  useEffect(async () => {
    const contract = await connectToTokenContract();
    setContract(contract);
    _getSupply(contract);
    _getBalance(contract);
  }, []);
  
  async function _getSupply(contract) {
    const totalSupply = await contract.totalSupply();
    setSupply(jsInt(totalSupply));
  } 
  
  async function _getBalance(contract) {
    const account = await getAccount();
    const balanceOfUser = await contract.balanceOf(account);
    setBalance(jsInt(balanceOfUser));
  }

  async function _transfer() {
    const contract = await getProviderSigned_token();
    const transaction = await contract.transfer(
      '0x4bD23e98d0D492536F2e84630aDEbE2Fd01AFBc2', 
      "4500"
    );
    await transaction.wait();
  }

  // Navi : #3874
  async function _placeBet() {
    if (bet1) {
      const contract = await getProviderSigned_pool();
      console.log("CONTRACT", contract);
      // const account = await getAccount();
      // await contract.approve(CONTRACT_POOL_ADDRESS, utils.parseEther(bet1));
      const placeBet = await contract.placeBets("2", 3874, bet1);
      console.log("placeBet", placeBet);
    }
  }

  async function _getPool() {
    const contract = await connectToPoolContract();
    let bal = jsInt(await contract.getPool(2));
    setBet({...bet, currentPool: bal});
  }
  
  async function _getmyShareInPool() {
    const contract = await connectToPoolContract();
    const account = await getAccount();
    const myBet = _getMyBets();
    console.log("My SHARE", currentPool, _getMyBets());
  }

  async function _getAllBets() {
    const contract = await connectToPoolContract();
    const actualBet = await contract.getBet("2");
    const account = await getAccount();
    const myBets = [];
    console.log("getting bets...", actualBet);
    actualBet.map(bet => {
      console.log(bet.better, account, bet.better == account);
      // Pour l'instant on voit tout
      // if (bet.better == account) {
      const amount = jsInt(bet.amount);
      const teamId = jsInt(bet.teamId);
      const id = jsInt(bet.id);
      const myBet = {
        id,
        better: bet.better,
        amount, teamId
      }
      myBets.push(myBet);
      // }
    });
    console.log("ACTUAL", myBets);
    return myBets;
  }

  async function _getMyBets() {
    await _getPool()
    const contract = await connectToPoolContract();
    const allBets = await contract.getBet("2");
    const account = await getAccount();
    let myBets = 0;
    allBets.map(bet => {
      if (bet.better == account) {
        myBets += jsInt(bet.amount);
      }
    });

    const currentPool = bet.currentPool;
    console.log("coucou", currentPool, myBets, (currentPool / myBets));

    myBets = `${(currentPool / myBets).toFixed(2)}%`; 
    setBet({...bet, myShare: myBets});
  }

  console.log("BET", bet);
  return (
    <div className={styles.container}>
      <Head>
        <title>Margot Betz</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Bubble Token!</a>
        </h1>
        <p>Supply is : {supply}</p>
        <p>My balance is : {balance} </p>
        <p>Pool : {bet.currentPool} and my share : {bet.myShare}</p>
        <div className='flex'>
          <div className='card'>
            <div className="mb-4">
              <label className="block text-gray-700 text-sm font-bold mb-2" htmlFor="bet1">
                Team 1
              </label>
              <input onChange={e => setBet1(e.target.value)} className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" id="bet1" type="number" placeholder="0"/>
            </div>
          </div>
          <div className='card'>
            <div className="mb-4">
              <label className="block text-gray-700 text-sm font-bold mb-2" htmlFor="bet2">
                Team 2
              </label>
              <input onChange={e => setBet2(e.target.value)} className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" id="bet2" type="number" placeholder="0"/>
            </div>
          </div>
        </div>
        <div className='mt-5'>
          <button onClick={() => _placeBet()} className='bg-green-500 hover:bg-pink-600 text-white font-bold py-2 px-4 rounded-full m-auto'>Bet</button>
          <button onClick={() => _getAllBets()} className='bg-pink-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-full m-auto'>Get all bets</button>
          <button onClick={() => _getmyShareInPool()} className='bg-green-500 hover:bg-pink-600 text-white font-bold py-2 px-4 rounded-full m-auto'>get Share</button>
          <button onClick={() => _getPool()} className='bg-yellow-500 hover:bg-pink-600 text-white font-bold py-2 px-4 rounded-full m-auto'>get Pool</button>
        </div>
      </main>
    </div>
  )
}
